/**
	\file
	\ingroup SPI
	\brief Declaration of functions, macros, and constants related to the SPI interface

	\addtogroup SPI SPI interface
	\brief Serial interface to communicate among microchips

	The SPI interface uses three wires to communicate among microchips.
	One of the chips is called the \a master which initiates all communications.
	All other chips then have to take on the role of slaves.

	The three wires are
	- MOSI, Master Out Slave In
	- MISO, Master In Slave Out
	- SCLK, serial clock generated by the master

	Another wire is used for each of the slave chips: The chip select
	signal.
	The master is responsible to drive these signals to clarify which
	slave it is communicating with.

	Slave devices do not drive the MOSI or SCLK wires and usually keep
	the MISO connection in a high impedance state.
	Only when selected with the chip select signal they clock out
	data on the MISO line using the clock provided on the SCLK line.

	There are four different modes of signal transmission:
	Mode	| Clock polarity	| Signal sampling
	------- | --------------------- | ---------------------
	0	| Normal		| Leading edge
	1	| Normal		| Trailing edge
	2	| Reverse		| Leading edge
	3	| Reverse		| Trailing edge

	Each slave device has one mode that it accepts.

	The microcontroller is acting as a master in this program.
	It communicates with two ADS1248 ADC chips and one MAX7221
	7-segment display controller.
	The former uses SPI mode 0 whereas the latter uses mode 1.
	It is therefore important to switch modes before attempting
	to communicate with the slaves.

	\{
 */

#ifndef __SPI_H__
#define __SPI_H__

#include <avr/io.h>

/* *** SPI constants *************************************************************************************************************************************** */

#define SPI_CS_PORT			PORTD			///< Microcontroller port used for SPI chip select signals
#define SPI_CS_ADS1248_0		PD5			///< Pin used as SPI chip select signal for the first ADS1248 ADC chip
#define SPI_CS_ADS1248_1		PD6			///< Pin used as SPI chip select signal for the second ADS1248 ADC chip
#define SPI_CS_MAX7221			PD7			///< Pin used as SPI chip select signal for the MAX7221 7-segment display controller chip

/* *** SPI macros ****************************************************************************************************************************************** */

#define SPI_send(a)			SPI_send_receive(a)	///< Sends a byte through the SPI interface

/* *** SPI functions *************************************************************************************************************************************** */

void SPI_init(void);				///< Initializes the SPI interface of the microcontroller
void SPI_select(uint8_t cs);			///< Signals selection to the chip given as argument
void SPI_deselect(uint8_t cs);			///< Signals no selection to the chip given as argument
uint8_t SPI_send_receive(uint8_t data);		///< Sends and receives a byte (at the same time) through the SPI interface
void SPI_set_sample_rising_edge(void);		///< Sets SPI communications mode 1 (for MAX7221 7-segment display controller)
void SPI_set_sample_falling_edge(void);		///< Sets SPI communications mode 0 (for ADS1248 ADCs)

/** \} */

#endif /* __SPI_H__ */
